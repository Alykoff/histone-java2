[
  {
    "name": "array methods -> length",
    "cases": [
      {
        "input": "<div>{{[1, 2, 3]->length}} = 3</div>",
        "expectedResult": "<div>3 = 3</div>"
      },
      {
        "input": "<div>{{[foo: 'bar']->length}} = 1</div>",
        "expectedResult": "<div>1 = 1</div>"
      },
      {
        "input": "<div>{{[]->length}} = 0</div>",
        "expectedResult": "<div>0 = 0</div>"
      }
    ]
  },
  {
    "name": "array - some",
    "cases": [
      {
        "input": "{{macro isBiggerThan10(element)}}{{return element > 10}}{{/macro}}{{[2, 5, 8, 1, 4]->some(isBiggerThan10)}} {{[12, 5, 8, 1, 4]->some(isBiggerThan10)}}",
        "expectedResult": "false true"
      },
      {
        "input": "{{macro isBiggerThan(biggerThan, element)}}{{return element > biggerThan}}{{/macro}}{{[2, 5, 8, 1, 4]->some(isBiggerThan, 10)}} {{[12, 5, 8, 1, 4]->some(isBiggerThan, 10)}}",
        "expectedResult": "false true"
      }
    ]
  },
  {
    "name": "array - filter",
    "cases": [
      {
        "input": "{{macro isBigEnough(element)}}{{return element >= 10}}{{/macro}}{{[12, 5, 8, 130, 44]->filter(isBigEnough)}}",
        "expectedResult": "12 130 44"
      },
      {
        "input": "{{macro isBigEnough(element)}}{{return element >= 10}}{{/macro}}{{[12, 5, 8, 130, 44]->filter(isBigEnough)}}",
        "expectedResult": "12 130 44"
      },
      {
        "input": "{{macro isBigEnough(biggerThan, element)}}{{return element >= biggerThan}}{{/macro}}{{[12, 5, 8, 130, 44]->filter(isBigEnough, 10)}}",
        "expectedResult": "12 130 44"
      },
      {
        "input": "{{[[errorMsg: 'a'],[errorMsg: 'b'],[errorMsg: 'c'],[errorMsg: 'a'],[xxx: 10]]->group(x => x.errorMsg)->keys->filter->toJSON}}",
        "expectedResult": "[]"
      }
    ]
  },
  {
    "name": "array methods -> keys",
    "cases": [
      {
        "input": "{{[1, 2, 3]->keys->toJSON}}",
        "expectedAST": "[29,[22,[22,[1,1,\"0\",2,\"1\",3,\"2\"],\"keys\"],\"toJSON\"]]",
        "expectedResult": "[0,1,2]"
      },
      {
        "input": "{{[foo: 'bar', bar: 'foo']->keys->toJSON}}",
        "expectedAST": "[29,[22,[22,[1,\"bar\",\"foo\",\"foo\",\"bar\"],\"keys\"],\"toJSON\"]]",
        "expectedResult": "[\"foo\",\"bar\"]"
      },
      {
        "input": "<div>{{[bar: 'foo', foo: 'bar']->keys->toJSON}} = [\"bar\",\"foo\"]</div>",
        "expectedResult": "<div>[\"bar\",\"foo\"] = [\"bar\",\"foo\"]</div>"
      },
      {
        "input": "<div>{{[]->keys->toJSON}} = []</div>",
        "expectedResult": "<div>[] = []</div>"
      },
      {
        "input": "{{[1, 2, 3, 4]->keys}}",
        "expectedResult": "0 1 2 3"
      },
      {
        "input": "{{[1, 2, 3, 4]->keys->toString}}",
        "expectedResult": "0 1 2 3"
      }
    ]
  },
  {
    "name": "array - map",
    "cases": [
      {
        "input": "{{macro mapper(value)}}{{return value * 100}}{{/macro}}{{[1, 4, 9]->map(mapper)}}",
        "expectedResult": "100 400 900"
      },
      {
        "input": "{{macro mapper(prefix, value)}}{{return prefix + value}}{{/macro}}{{[1, 2, 3, 4]->map(mapper, 'prefix_')}}",
        "expectedResult": "prefix_1 prefix_2 prefix_3 prefix_4"
      }
    ]
  },
  {
    "name": "array - size",
    "cases": [
      {
        "input": "{{['size': 'XL', 'color': 'gold']->values}}",
        "expectedResult": "XL gold"
      },
      {
        "input": "{{[\"size\": \"XL\", \"color\": \"gold\"]->values->toJSON}} = [\"XL\",\"gold\"]",
        "expectedAST": "[29,[22,[22,[1,\"XL\",\"size\",\"gold\",\"color\"],\"values\"],\"toJSON\"],\" = [\\\"XL\\\",\\\"gold\\\"]\"]",
        "expectedResult": "[\"XL\",\"gold\"] = [\"XL\",\"gold\"]"
      },
      {
        "input": "{{['one', 'two', 'three']->reverse->toJSON}} = [\"three\",\"two\",\"one\"]",
        "expectedResult": "[\"three\",\"two\",\"one\"] = [\"three\",\"two\",\"one\"]"
      }
    ]
  },
  {
    "name": "array methods -> concat",
    "cases": [
      {
        "input": "{{[1, 2, 3] + [4, 5, 6]}}",
        "expectedResult": "1 2 3 4 5 6"
      },
      {
        "input": "{{[foo: 'bar'] + [x: 'y']}}",
        "expectedResult": "bar y"
      },
      {
        "input": "{{var arr = [a:[id:5, cont:1], b:[id:1, cont:12]]}}{{var arr1 = arr + [[id:2, con:5]]}}{{arr1->toJSON}}...{{arr->toJSON}}",
        "expectedResult": "{\"a\":{\"id\":5,\"cont\":1},\"b\":{\"id\":1,\"cont\":12},\"0\":{\"id\":2,\"con\":5}}...{\"a\":{\"id\":5,\"cont\":1},\"b\":{\"id\":1,\"cont\":12}}"
      }
    ]
  },
  {
    "name": "array methods -> every",
    "cases": [
      {
        "input": "{{macro isBigEnough(element)}}{{return element >= 10}}{{/macro}}{{[12, 5, 8, 130, 44]->every(isBigEnough)}} {{[12, 54, 18, 130, 44]->every(isBigEnough)}}",
        "expectedResult": "false true"
      },
      {
        "input": "{{macro isBigEnough(biggerThan, element)}}{{return element >= biggerThan}}{{/macro}}{{[12, 5, 8, 130, 44]->every(isBigEnough, 10)}} {{[12, 54, 18, 130, 44]->every(isBigEnough, 10)}}",
        "expectedResult": "false true"
      }
    ]
  },
  {
    "name": "array methods -> join",
    "cases": [
      {
        "input": "{{var a = ['Wind', 'Rain', 'Fire']}}{{a->join}}",
        "expectedResult": "WindRainFire"
      },
      {
        "input": "{{var a = ['Wind', 'Rain', 'Fire']}}{{a->join('')}}",
        "expectedResult": "WindRainFire"
      },
      {
        "input": "{{var a = ['Wind', 'Rain', 'Fire']}}{{a->join(' and ')}}",
        "expectedResult": "Wind and Rain and Fire"
      },
      {
        "input": "{{var a = ['Wind', 'Rain', 'Fire']}}{{a->join(' + ')}}",
        "expectedResult": "Wind + Rain + Fire"
      },
      {
        "input": "{{var a = ['Wind', 'Rain', 'Fire']}}{{a->join(0)}}",
        "expectedResult": "Wind0Rain0Fire"
      },
      {
        "input": "{{var a = ['Wind', 'Rain', 'Fire']}}{{a->join(['*'])}}",
        "expectedResult": "Wind*Rain*Fire"
      }
    ]
  },
  {
    "name": "array methods -> chunk",
    "cases": [
      {
        "input": "{{range(7)->chunk(2)->toJSON()}}",
        "expectedAST": "[29,[22,[22,[22,[4],\"range\",7],\"chunk\",2],\"toJSON\"]]",
        "expectedResult": "[[0,1],[2,3],[4,5],[6]]"
      },
      {
        "input": "{{[[0,1],[2,3],[4,5],[6]]->toJSON}}",
        "expectedResult": "[[0,1],[2,3],[4,5],[6]]"
      },
      {
        "input": "{{range(7)->chunk(2.0)->toJSON}}",
        "expectedResult": "[[0,1],[2,3],[4,5],[6]]"
      },
      {
        "input": "{{range(6)->chunk(2)->toJSON}}",
        "expectedResult": "[[0,1],[2,3],[4,5]]"
      },
      {
        "input": "{{range(7)->chunk('2')->toJSON}}",
        "expectedResult": "[[0,1],[2,3],[4,5],[6]]"
      },
      {
        "input": "{{['sdf':'hhhh', 'dfdf', 'rrr']->chunk()->toJSON()}}",
        "expectedResult": "{\"sdf\":\"hhhh\",\"0\":\"dfdf\",\"1\":\"rrr\"}"
      },
      {
        "input": "{{['sdf':'hhhh', 'dfdf', 'rrr']->chunk('dffd')->toJSON()}}",
        "expectedResult": "{\"sdf\":\"hhhh\",\"0\":\"dfdf\",\"1\":\"rrr\"}"
      },
      {
        "input": "{{['sdf':'hhhh', 'dfdf', 'rrr']->chunk(2.5)->toJSON()}}",
        "expectedResult": "{\"sdf\":\"hhhh\",\"0\":\"dfdf\",\"1\":\"rrr\"}"
      },
      {
        "input": "{{['sdf':'hhhh', 'dfdf', 'rrr']->chunk(-1)->toJSON()}}",
        "expectedResult": "{\"sdf\":\"hhhh\",\"0\":\"dfdf\",\"1\":\"rrr\"}"
      },
      {
        "input": "{{['sdf':'hhhh', 'dfdf', 'rrr']->chunk(0)->toJSON()}}",
        "expectedResult": "{\"sdf\":\"hhhh\",\"0\":\"dfdf\",\"1\":\"rrr\"}"
      }
    ]
  },
  {
    "name": "array methods -> equals",
    "cases": [
      {
        "input": "{{[1,2] = [5, 10, 15]}}",
        "expectedResult": "true"
      }
    ]
  },
  {
    "name": "array methods -> reduce",
    "cases": [
      {
        "input": "{{macro re(prev, curr, o)}}{{prev->toNumber + curr->toNumber}}{{/macro}}{{[1,2,3]->reduce(re, 1)}}",
        "expectedResult": "7"
      },
      {
        "input": "{{macro re(prev, curr, o)}}{{prev->toNumber + curr->toNumber}}{{/macro}}{{[1,2,3]->reduce(re, 1, 1000)}}",
        "expectedResult": "3001"
      },
      {
        "input": "{{macro re(prev, curr, o)}}{{prev->toNumber + curr->toNumber}}{{/macro}}{{[1,2,3]->reduce(re)}}",
        "expectedResult": "6"
      },
      {
        "input": "{{macro re(prev, curr, o)}}{{prev->toNumber + curr->toNumber}}{{/macro}}{{[100,2,3]->reduce()}}",
        "expectedResult": "100"
      }
    ]
  },
  {
    "name": "array methods -> sort",
    "cases": [
      {
        "input": "{{macro re(prev, curr)}}{{curr}}{{/macro}}{{[1,2,3]->sort()->toJSON}}",
        "expectedResult": "[\"1\",\"2\",\"3\"]"
      },
      {
        "input": "{{macro re(prev, curr)}}{{curr}}{{/macro}}{{[1,2,3]->sort(1)->toJSON}}",
        "expectedResult": "[\"1\",\"2\",\"3\"]"
      },
      {
        "input": "{{macro re(prev, curr)}}{{curr}}{{/macro}}{{[1,2,3]->sort(re)->toJSON}}",
        "expectedResult": "[3,2,1]"
      }
    ]
  },
  {
    "name": "array methods -> sort",
    "cases": [
      {
        "input": "{{macro re(v1,v2,k1,k2)}}{{return v1 < v2}}{{/macro}}{{[4,3,2,1,22,0,-1,1]->sort(re)->toJSON}}",
        "expectedResult": "[22,4,3,2,1,1,0,-1]"
      },
      {
        "input": "{{macro re(v1,v2,k1,k2)}}{{return v1 > v2}}{{/macro}}{{[4,3,2,1,22,0,-1,1]->sort(re)->toJSON}}",
        "expectedResult": "[-1,0,1,1,2,3,4,22]"
      },
      {
        "input": "{{macro re(v1,v2,k1,k2)}}{{v1 < v2}}{{/macro}}{{[4,3,2,1,22,0,-1,1]->sort(re)->toJSON}}",
        "expectedResult": "[1,-1,0,22,1,2,3,4]"
      },
      {
        "input": "{{macro re(v1,v2,k1,k2)}}{{v1 > v2}}{{/macro}}{{[4,3,2,1,22,0,-1,1]->sort(re)->toJSON}}",
        "expectedResult": "[1,-1,0,22,1,2,3,4]"
      },
      {
        "input": "{{macro re(v1,v2,k1,k2)}}{{v1 > v2}}{{/macro}}{{[4,3,2,1,22,0,-1,1]->sort()->toJSON}}",
        "expectedResult": "[\"-1\",\"0\",\"1\",\"1\",\"2\",\"22\",\"3\",\"4\"]"
      },
      {
        "input": "{{macro re(v1,v2,k1,k2)}}{{return v1 > v2}}{{/macro}}{{[0: 1,'d': 2,'w': 3, 1: -1]->sort(re)->toJSON}}",
        "expectedResult": "[-1,1,2,3]"
      },
      {
        "input": "{{macro re(v1,v2,k1,k2)}}{{return v1 < v2}}{{/macro}}{{[0: 1,'d': 2,'w': 3, 1: -1]->sort(re)->toJSON}}",
        "expectedResult": "[3,2,1,-1]"
      },
      {
        "input": "{{macro re(v1,v2,k1,k2)}}{{return v1 < v2}}{{/macro}}{{[0: 1,'d': 2,'w': 3, 1: -1]->sort(re, 1000000)->toJSON}}",
        "expectedResult": "[1,2,3,-1]"
      },
      {
        "input": "{{macro re(v1,v2,k1,k2)}}{{return v1 < v2}}{{/macro}}{{[0: 1,'d': 2,'w': 3, 1: -1]->sort(re, 1)->toJSON}}",
        "expectedResult": "[1,-1,3,2]"
      },
      {
        "input": "{{macro re(v1,v2,k1,k2)}}{{return v1 < v2}}{{/macro}}{{[0: 1,'d': 2,'w': 3, 1: -1]->sort('dfsf')->toJSON}}",
        "expectedResult": "[\"-1\",\"1\",\"2\",\"3\"]"
      }
    ]
  },
  {
    "name": "array methods -> slice",
    "cases": [
      {
        "input": "{{[1,2,3,4]->slice(2)->toJSON}}",
        "expectedResult": "[3,4]"
      },
      {
        "input": "{{range(1,20)->slice(2,-1)->toJSON}}",
        "expectedResult": "[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]"
      },
      {
        "input": "{{range(1,20)->slice(2,1)->toJSON}}",
        "expectedResult": "[3]"
      },
      {
        "input": "{{range(1,20)->slice(2,111111)->toJSON}}",
        "expectedResult": "[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]"
      },
      {
        "input": "{{range(1,20)->slice(-1,111111)->toJSON}}",
        "expectedResult": "[20]"
      },
      {
        "input": "{{range(1,20)->slice(-11,111111)->toJSON}}",
        "expectedResult": "[10,11,12,13,14,15,16,17,18,19,20]"
      },
      {
        "input": "{{range(1,20)->slice(0)->toJSON}}",
        "expectedResult": "[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]"
      },
      {
        "input": "{{range(1,20)->slice(0)->toJSON}}",
        "expectedResult": "[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]"
      },
      {
        "input": "{{range(1,20)->slice(0, 0)->toJSON}}",
        "expectedResult": "[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]"
      },
      {
        "input": "{{range(1,20)->slice(2, -1)->toJSON}}",
        "expectedResult": "[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]"
      },
      {
        "input": "{{range(1,20)->slice(2, 0)->toJSON}}",
        "expectedResult": "[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]"
      },
      {
        "input": "{{range(1,20)->slice('df')->toJSON}}",
        "expectedResult": "[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]"
      },
      {
        "input": "{{range(1,20)->slice(0,'df')->toJSON}}",
        "expectedResult": "[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]"
      },
      {
        "input": "{{range(1,20)->slice('df',0)->toJSON}}",
        "expectedResult": "[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]"
      },
      {
        "input": "{{range(1,20)->slice('df',1)->toJSON}}",
        "expectedResult": "[1]"
      },
      {
        "input": "{{range(1,20)->slice('df','df')->toJSON}}",
        "expectedResult": "[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]"
      },
      {
        "input": "{{range(1,20)->slice(-2,5)->toJSON}}",
        "expectedResult": "[19,20]"
      },
      {
        "input": "{{range(1,20)->slice(-2,5)->toJSON}}",
        "expectedResult": "[19,20]"
      },
      {
        "input": "{{range(1,20)->slice('2',5)->toJSON}}",
        "expectedResult": "[3,4,5,6,7]"
      },
      {
        "input": "{{range(1,20)->slice('2.0',5)->toJSON}}",
        "expectedResult": "[3,4,5,6,7]"
      },
      {
        "input": "IS_JS_BUG???{{range(1,20)->slice('2.12',5)->toJSON}}",
        "expectedResult": "IS_JS_BUG???[1,2,3,4,5]"
      },
      {
        "input": "{{range(1,20)->slice('255',5)->toJSON}}",
        "expectedResult": "[]"
      },
      {
        "input": "{{range(1,20)->slice(255,5)->toJSON}}",
        "expectedResult": "[]"
      }
    ]
  },
  {
    "name": "array methods -> []",
    "cases": [
      {
        "input": "{{[1,2,3,4][0]->toJSON}}",
        "expectedResult": "1"
      },
      {
        "input": "{{[0:1,2,3,4][0]->toJSON}}",
        "expectedResult": "1"
      },
      {
        "input": "{{[0:1,2,3,4][1]->toJSON}}",
        "expectedResult": "2"
      },
      {
        "input": "{{[0:1,2,3,4][2]->toJSON}}",
        "expectedResult": "3"
      },
      {
        "input": "{{[0:1,2,3,4]->toJSON}}",
        "expectedResult": "[1,2,3,4]"
      },
      {
        "input": "{{[1:1,2,3,4]->toJSON}}",
        "expectedResult": "{\"1\":1,\"2\":2,\"3\":3,\"4\":4}"
      },
      {
        "input": "{{[1:1,5:2,3,4]->toJSON}}",
        "expectedResult": "{\"1\":1,\"5\":2,\"6\":3,\"7\":4}"
      },
      {
        "input": "{{[1:1,5:2,3,3:4,5,6]->toJSON}}",
        "expectedResult": "{\"1\":1,\"5\":2,\"6\":3,\"3\":4,\"7\":5,\"8\":6}"
      },
      {
        "input": "{{[1:1,1:2,3,3:4,5,6]->toJSON}}",
        "expectedResult": "{\"1\":2,\"2\":3,\"3\":4,\"4\":5,\"5\":6}"
      },
      {
        "input": "{{['1':1,1:2,3,3:4,5,6]->toJSON}}",
        "expectedResult": "{\"1\":2,\"2\":3,\"3\":4,\"4\":5,\"5\":6}"
      },
      {
        "input": "{{[3:1,2,3,3:4,5,6]->toJSON}}",
        "expectedResult": "{\"3\":4,\"4\":2,\"5\":3,\"6\":5,\"7\":6}"
      },
      {
        "input": "{{[3:1,2,3,4,5,6]->toJSON}}",
        "expectedResult": "{\"3\":1,\"4\":2,\"5\":3,\"6\":4,\"7\":5,\"8\":6}"
      },
      {
        "input": "{{['1.0':1,1:2,3,3:4,5,6]->toJSON}}",
        "expectedResult": "{\"1\":2,\"2\":3,\"3\":4,\"4\":5,\"5\":6}"
      },
      {
        "input": "{{[1,2,3,4][-1]->toJSON}}",
        "expectedResult": "null"
      },
      {
        "input": "{{[1,2,3,4][99]->toJSON}}",
        "expectedResult": "null"
      },
      {
        "input": "{{[1,2,3,4]['1']->toJSON}}",
        "expectedResult": "2"
      },
      {
        "input": "{{[0:1,2,3,4]['1']->toJSON}}",
        "expectedResult": "2"
      },
      {
        "input": "{{[0:1,2,3,4][1]->toJSON}}",
        "expectedResult": "2"
      },
      {
        "input": "{{['d':1,2,3,4][1]->toJSON}}",
        "expectedResult": "3"
      },
      {
        "input": "{{[1,2,3,4][3]->toJSON}}",
        "expectedResult": "4"
      },
      {
        "input": "{{[1,2,3,4][4]->toJSON}}",
        "expectedResult": "null"
      },
      {
        "input": "{{[][1]->toJSON}}",
        "expectedResult": "null"
      },
      {
        "input": "{{[1,2,3,4][1]->toJSON}}",
        "expectedResult": "2"
      }
    ]
  },
  {
    "name": "array methods -> find",
    "cases": [
      {
        "input": "{{macro re(v)}}{{return v < 0}}{{/macro}}{{[1,22,3,-4,5,6]->find(re)}}",
        "expectedResult": "-4"
      },
      {
        "input": "{{macro re(v)}}{{return v > 0}}{{/macro}}{{[1,22,3,-4,5,6]->find(re)}}",
        "expectedResult": "1"
      },
      {
        "input": "{{macro re(v)}}{{v > 0}}{{/macro}}{{[1,22,3,-4,5,6]->find(re)}}",
        "expectedResult": "1"
      },
      {
        "input": "{{macro re(v)}}{{v < 0}}{{/macro}}{{[1,22,3,-4,5,6]->find(re)}}",
        "expectedResult": "1"
      },
      {
        "input": "{{macro re(r, v)}}{{return v > r}}{{/macro}}{{[1,2,3,-4,22,5,6]->find(re, 19)->toJSON}}",
        "expectedResult": "\"3\""
      },
      {
        "input": "{{macro re(r, v)}}{{return v > r}}{{/macro}}{{[1,2,3,-4,22,5,6]->find(re, 2)->toJSON}}",
        "expectedResult": "\"3\""
      },
      {
        "input": "{{[1,22,3,-4,5,6]->find()}}",
        "expectedResult": ""
      },
      {
        "input": "{{[1,22,3,-4,5,6]->find(1)}}",
        "expectedResult": "1"
      },
      {
        "input": "{{[1,22,3,-4,5,6]->find(addada)}}",
        "expectedResult": ""
      }
    ]
  },
  {
    "name": "array methods -> group",
    "cases": [
      {
        "input": "{{[1,2,3]->group()->toJSON}}",
        "expectedResult": "[]"
      },
      {
        "input": "{{macro re(v)}}{{if (v > 20)}}{{return 'd'}}{{else}}{{v}}{{/if}}{{/macro}}{{[]->group(re)->toJSON}}",
        "expectedResult": "[]"
      },
      {
        "input": "{{macro re(v)}}{{if (v > 20)}}{{return 'd'}}{{else}}{{v}}{{/if}}{{/macro}}{{[1,2,16,-4,22,5,6]->group(re)->toJSON}}",
        "expectedResult": "{\"1\":[1],\"2\":[2],\"5\":[5],\"6\":[6],\"16\":[16],\"-4\":[-4],\"d\":[22]}"
      },
      {
        "input": "{{macro re(v)}}{{if (v > 20)}}{{return d}}{{else}}{{v + ___}}{{/if}}{{/macro}}{{[1,2,16,-4,22,5,6]->group(re)->toJSON}}",
        "expectedResult": "{\"\":[1,2,16,-4,22,5,6]}"
      },
      {
        "input": "{{macro re(v,k)}}{{if (k > 20)}}{{return true}}{{else}}{{k}}{{/if}}{{/macro}}{{[1,2,16,-4,22,5,6]->group(re)->toJSON}}",
        "expectedResult": "[[1],[2],[16],[-4],[22],[5],[6]]"
      },
      {
        "input": "{{macro re(k,v)}}{{if (v > 20)}}{{return true}}{{else}}v{{/if}}{{/macro}}{{[1,2,16,-4,22,5,6]->group(re)->toJSON}}",
        "expectedResult": "{\"v\":[1,2,16,-4,22,5,6]}"
      },
      {
        "input": "{{macro re(v,k)}}{{if (v > 20)}}{{return true}}{{else}}v{{/if}}{{/macro}}{{[1,2,16,-4,22,5,6]->group(re)->toJSON}}",
        "expectedResult": "{\"v\":[1,2,16,-4,5,6],\"true\":[22]}"
      },
      {
        "input": "{{macro re(v)}}{{if (v > 20)}}{{return true}}{{elseif (v > 15)}}{{return dd}}{{else}}{{d2}}{{/if }}{{/macro}}{{[1,2,16,-4,22,5,6]->group(re)->toJSON}}",
        "expectedResult": "{\"\":[1,2,16,-4,5,6],\"true\":[22]}"
      },
      {
        "input": "{{macro re(v)}}{{if (v > 20)}}{{return true}}{{elseif (v > 15)}}{{return false}}{{else}}{{d2}}{{/if }}{{/macro}}{{[1,2,16,-4,22,5,6]->group(re)->toJSON}}",
        "expectedResult": "{\"\":[1,2,-4,5,6],\"false\":[16],\"true\":[22]}"
      },
      {
        "input": "{{for x in [1,2,3,4,5,6,7,8,9,10]}}{{if x > 7}}{{true}} {{elseif x > 5}}{{false}} {{else}}{{\"ha\"}} {{/if}}{{/for}}",
        "expectedResult": "ha ha ha ha ha false false true true true "
      },
      {
        "input": "{{macro re(v)}}{{if (v > 20)}}{{return \"d\"}}{{else}}{{v}}{{/if}}{{/macro}}{{[7,1,2,-1,16,-4,22,-10,5,6]->group(re)->toJSON}}",
        "expectedResult": "{\"1\":[1],\"2\":[2],\"5\":[5],\"6\":[6],\"7\":[7],\"16\":[16],\"-1\":[-1],\"-4\":[-4],\"d\":[22],\"-10\":[-10]}"
      },
      {
        "input": "{{[1,2]->some(true)}}",
        "expectedResult": "true"
      },
      {
        "input": "{{[1,2]->some(false)}}",
        "expectedResult": "false"
      },
      {
        "input": "{{['A', 1, 2, 3, 4]->every(false)->toJSON}}",
        "expectedResult": "false"
      },
      {
        "input": "--{{['A', 1, 2, 3, 4, 1]->reduce(1)->toJSON}}",
        "expectedResult": "--1"
      },
      {
        "input": "--{{['A', 1, 2, 3, 4, 1]->reduce('B')->toJSON}}",
        "expectedResult": "--\"B\""
      },
      {
        "input": "--{{['A', 1, 2, 3, 4, 1]->reduce(1.01)->toJSON}}",
        "expectedResult": "--1.01"
      },
      {
        "input": "--{{['A', 1, 2, 3, 4, 1]->reduce(99, 88)->toJSON}}",
        "expectedResult": "--99"
      },
      {
        "input": "{{macro filter(prev, curr)}}{{return prev + curr}}{{/macro}}--{{[0, 1, 2, 3, 4]->reduce(filter)->toJSON}}",
        "expectedResult": "--10"
      },
      {
        "input": "--{{[x:[a:1]]['x.a']}}--",
        "expectedResult": "----"
      },
      {
        "input": "--{{[x:[a:1]].x.a}}--",
        "expectedResult": "--1--"
      },
      {
        "input": "{{macro foo}}{{self.callee->toJSON}}{{self.arguments->toJSON}}{{/macro}}{{var foo = foo->bind('A', 'B', 'C')->bind('X')}}{{foo(30, 40)}}",
        "expectedResult": "null[\"X\",\"A\",\"B\",\"C\",30,40]"
      },
      {
        "input": "{{macro mapper}}{{return self.arguments}}{{/macro}}{{[foo: 0]->map(mapper)->toJSON}}",
        "expectedResult": "{\"foo\":[0,\"foo\",{\"foo\":0}]}"
      },
      {
        "input": "{{[[title: 'A', hidden: false],[title: 'B', hidden: true],[title: 'C', hidden: false]]->filter(tab => !tab.hidden)->toJSON}}",
        "expectedResult": "[{\"title\":\"A\",\"hidden\":false},{\"title\":\"C\",\"hidden\":false}]"
      },
      {
        "input": "{{aaa -> toArray -> toJSON}}",
        "expectedResult": "[null]"
      },
      {
        "input": "{{[1] -> toArray -> toJSON}}",
        "expectedResult": "[1]"
      },
      {
        "input": "{{123 -> toArray -> toJSON}}",
        "expectedResult": "[123]"
      }
    ]
  }
]