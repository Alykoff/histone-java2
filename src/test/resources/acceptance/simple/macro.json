[
  {
    "name": "macro - return",
    "cases": [
      {
        "input": "{{macro myMacro(a, b, c, d)}}a{{return 1}}b{{/macro}}{{myMacro->call([1, 2, 3, 4])->toJSON}}",
        "expectedResult": "1"
      },
      {
        "input": "{{macro myMacro(a, b, c, d)}}a{{1}}b{{/macro}}{{myMacro->call([1, 2, 3, 4])->toJSON}}",
        "expectedResult": "\"a1b\""
      },
      {
        "input": "{{macro myMacro(a, b, c, d)}}a{{a > b}}b{{/macro}}{{myMacro->call([1, 2, 3, 4])->toJSON}}",
        "expectedResult": "\"afalseb\""
      }
    ]
  },
  {
    "name": "macro - call",
    "cases": [
      {
        "input": "{{macro myMacro(a, b, c, d)}}<div>a = {{a}}</div><div>b = {{b}}</div><div>c = {{c}}</div><div>d = {{d}}</div>{{/macro}}{{myMacro->call([1, 2, 3, 4])}}",
        "expectedResult": "<div>a = 1</div><div>b = 2</div><div>c = 3</div><div>d = 4</div>"
      },
      {
        "input": "{{macro myMacro(a, b, c, d)}}<div>a = {{a}}</div><div>b = {{b}}</div><div>c = {{c}}</div><div>d = {{d}}</div>{{/macro}}{{myMacro->call([1, 2], [3, 4])}}",
        "expectedResult": "<div>a = 1</div><div>b = 2</div><div>c = 3</div><div>d = 4</div>"
      },
      {
        "input": "{{macro myMacro(a, b, c, d)}}<div>a = {{a}}</div><div>b = {{b}}</div><div>c = {{c}}</div><div>d = {{d}}</div>{{/macro}}{{myMacro->call([1, 2, 3], [4])}}",
        "expectedResult": "<div>a = 1</div><div>b = 2</div><div>c = 3</div><div>d = 4</div>"
      },
      {
        "input": "{{macro myMacro(a, b, c, d)}}<div>a = {{a}}</div><div>b = {{b}}</div><div>c = {{c}}</div><div>d = {{d}}</div>{{/macro}}{{myMacro->call([[1, 2]], [3, 4])}}",
        "expectedResult": "<div>a = 1 2</div><div>b = 3</div><div>c = 4</div><div>d = </div>"
      },
      {
        "input": "{{macro blaBla(value)}} {{value}}{{if value}}{{self.callee(value - 1)}}{{/if}}{{/macro}}{{blaBla(10)}}",
        "expectedResult": " 10 9 8 7 6 5 4 3 2 1 0"
      }
    ]
  },
  {
    "name": "macro - ()",
    "cases": [
      {
        "input": "{{macro myMacro(a, b, c, d)}}<div>a = {{a}}</div><div>b = {{b}}</div><div>c = {{c}}</div><div>d = {{d}}</div>{{/macro}}{{myMacro([1, 2, 3, 4])}}",
        "expectedResult": "<div>a = 1 2 3 4</div><div>b = </div><div>c = </div><div>d = </div>"
      },
      {
        "input": "{{macro myMacro(a, b, c, d)}}<div>a = {{a}}</div><div>b = {{b}}</div><div>c = {{c}}</div><div>d = {{d}}</div>{{/macro}}{{myMacro([1, 2], [3, 4])}}",
        "expectedResult": "<div>a = 1 2</div><div>b = 3 4</div><div>c = </div><div>d = </div>"
      },
      {
        "input": "{{macro myMacro(a, b, c, d)}}<div>a = {{a}}</div><div>b = {{b}}</div><div>c = {{c}}</div><div>d = {{d}}</div>{{/macro}}{{myMacro([1, 2, 3], [4])}}",
        "expectedResult": "<div>a = 1 2 3</div><div>b = 4</div><div>c = </div><div>d = </div>"
      },
      {
        "input": "{{macro myMacro(a, b, c, d)}}<div>a = {{a}}</div><div>b = {{b}}</div><div>c = {{c}}</div><div>d = {{d}}</div>{{/macro}}{{myMacro([[1, 2]], [3, 4])}}",
        "expectedResult": "<div>a = 1 2</div><div>b = 3 4</div><div>c = </div><div>d = </div>"
      }
    ]
  },
  {
    "name": "macro - bind",
    "cases": [
      {
        "input": "{{macro myMacro(a, b, c, d)}}<div>a = {{a}}</div><div>b = {{b}}</div><div>c = {{c}}</div><div>d = {{d}}</div>{{/macro}}{{var bound = myMacro->bind('foo', 'bar')}}{{bound(10, 20)}}",
        "expectedResult": "<div>a = foo</div><div>b = bar</div><div>c = 10</div><div>d = 20</div>"
      },
      {
        "input": "{{macro myMacro(a, b, c, d)}}<div>a = {{a}}</div><div>b = {{b}}</div><div>c = {{c}}</div><div>d = {{d}}</div>re - {{re}}{{/macro}}{{var re = 2}}{{var bound = myMacro->bind('foo', 'bar')}}{{bound(10, 20)}}",
        "expectedResult": "<div>a = foo</div><div>b = bar</div><div>c = 10</div><div>d = 20</div>re - "
      }
    ]
  },
  {
    "name": "macro - extend",
    "cases": [
      {
        "input": "{{macro inputWidget(type)}}<input type=\"{{type}}\" />{{/macro}}{{var inputWidget = inputWidget->extend([EMAIL: 'email',TEXT: 'text',PASSWORD: 'password'])}}{{inputWidget(inputWidget.PASSWORD)}}",
        "expectedResult": "<input type=\"password\" />"
      },
      {
        "input": "{{macro inputWidget(type)}}<input type=\"{{type}}\" />{{/macro}}{{var inputWidget = inputWidget->extend([EMAIL: 'email',TEXT: 'text'],[PASSWORD: 'password'])}}{{inputWidget(inputWidget.PASSWORD)}}",
        "expectedResult": "<input type=\"\" />"
      },
      {
        "input": "{{macro inputWidget(type)}}<input type=\"{{type}}\" />{{/macro}}{{var inputWidget = inputWidget->extend([EMAIL: 'email',TEXT: 'text', PASSWORD: 'password'])}}{{inputWidget(inputWidget.RE)}}",
        "expectedResult": "<input type=\"\" />"
      },
      {
        "input": "{{macro inputWidget(type)}}<input type=\"{{type}}\" />{{/macro}}{{var inputWidget = inputWidget->extend([EMAIL: 'email',TEXT: 'text',PASSWORD: 'password'])}}{{var inputWidget = inputWidget->extend([PASSWORD: 'ppp'])}}{{inputWidget(inputWidget.PASSWORD)}}",
        "expectedResult": "<input type=\"password\" />"
      },
      {
        "input": "{{macro inputWidget(type)}}<input type=\"{{type}}\" />{{/macro}}{{var inputWidget = inputWidget->extend([EMAIL: 'email',TEXT: 'text',PASSWORD: 'password'])}}{{var inputWidget = inputWidget->extend([PPP: 'ppp'])}}{{inputWidget(inputWidget.PPP)}}",
        "expectedResult": "<input type=\"ppp\" />"
      }
    ]
  },
  {
    "name": "macro - recursion",
    "cases": [
      {
        "input": "{{macro do1(x)}}{{x}}{{if x > 0}}{{self.callee(x-1)}}{{/if}}{{/macro}}{{do1(3)}}",
        "expectedResult": "3210"
      },
      {
        "input": "{{macro do1(x,y,z)}}{{[x,y,z]}}{{if x > 0}}{{self.callee(x-1,y,z)}}{{/if}}{{/macro}}{{do1(3)}}",
        "expectedResult": "3210"
      }
    ]
  },
  {
    "name": "macro - default values",
    "cases": [
      {
        "input": "{{macro myMacro(a, b, c = (10000 + 1), d = 222222)}}a = {{a}} b = {{b}} c = {{c}} d = {{d}}{{/macro}}{{myMacro(1, 2)}}",
        "expectedResult": "a = 1 b = 2 c = 10001 d = 222222"
      },
      {
        "input": "{{macro myMacro(a, b, c = 10000, d = 222222)}}a = {{a}} b = {{b}} c = {{c}} d = {{d}}{{/macro}}{{myMacro(1, 2)}}",
        "expectedResult": "a = 1 b = 2 c = 10000 d = 222222"
      },
      {
        "input": "{{macro myMacro(a, b, c = 10000, d = 222222)}}a = {{a}} b = {{b}} c = {{c}} d = {{d}}{{/macro}}{{myMacro(1, 2, 3)}}",
        "expectedResult": "a = 1 b = 2 c = 3 d = 222222"
      },
      {
        "input": "{{var x = 2}}{{macro myMacro(a, b, c = (x + 2.222222), d = 222222)}}a = {{a}} b = {{b}} c = {{c}} d = {{d}}{{/macro}}{{myMacro(1, 2)}}",
        "expectedResult": "a = 1 b = 2 c = 4.222222 d = 222222"
      },
      {
        "input": "{{macro macroName(value = 10)}}{{value}}{{/macro}}{{macroName(UNDEFINED)}}",
        "expectedResult": "10"
      },
      {
        "input": "{{macro macroName(value = 10)}}{{value}}{{/macro}}{{macroName()}}",
        "expectedResult": "10"
      },
      {
        "input": "{{macro macroName(value = 10)}}{{value}}{{/macro}}{{macroName('FOO')}}",
        "expectedResult": "FOO"
      },
      {
        "input": "{{macro macroName(value = 10, x = value)}}{{x->isUndefined}}{{/macro}}{{macroName()}}",
        "expectedResult": "true"
      },
      {
        "input": "{{var v = 10}}{{macro macroName(value = 10, x = value)}}{{v}}{{/macro}}{{var v =20}}{{macroName()}}",
        "expectedResult": "10"
      }
    ]
  },
  {
    "name": "macro - anonymous",
    "cases": [
      {
        "input": "{{((x) => 10)->isMacro}}",
        "expectedResult": "true"
      },
      {
        "input": "{{(x => 10)->isMacro}}",
        "expectedResult": "true"
      },
      {
        "input": "{{(=> 10)->isMacro}}",
        "expectedResult": "true"
      },
      {
        "input": "{{(=> 10)->isMacro}}",
        "expectedResult": "true"
      },
      {
        "input": "{{(=> 10)->call(12)}}",
        "expectedResult": "10"
      },
      {
        "input": "{{(=> 10)(12)}}",
        "expectedResult": "10"
      },
      {
        "input": "{{((x) => 10)(12)}}",
        "expectedResult": "10"
      },
      {
        "input": "{{((x) => 10)(12, 11)}}",
        "expectedResult": "10"
      },
      {
        "input": "{{((x, y) => 10)(12, 11)}}",
        "expectedResult": "10"
      },
      {
        "input": "{{((x, y) => x + y)(12, 11)}}",
        "expectedResult": "23"
      },
      {
        "input": "{{((x) => 10)()}}",
        "expectedResult": "10"
      },
      {
        "input": "{{(=> 10)()}}",
        "expectedResult": "10"
      }
    ]
  },
  {
    "name": "macro - custom cases",
    "cases": [
      {
        "input": "{{macro foo}}{{return 'x'}}{{/macro}}{{foo()}}-{{foo()}}",
        "expectedResult": "x-x"
      },
      {
        "input": "{{[()=> 10]->toJSON}}",
        "expectedResult": "[null]"
      },
      {
        "input": "{{[1, 2, 3, 4]->map(x => x * 10)->toJSON}}",
        "expectedResult": "[10,20,30,40]"
      },
      {
        "input": "xxx{{var f}}{{for in [1, 2, 3, 4]}}{{self->toJSON}}{{return 3}}{{/for}}{{/var}}{{f}}{{f}}",
        "expectedResult": "xxx33"
      },
      {
        "input": "{{macro foo(a)}}{{return 3}}{{/macro}}{{[1, 2, 3, 4]->filter(foo)->toJSON}}",
        "expectedResult": "[1,2,3,4]"
      },
      {
        "input": "{{macro foo}}{{var f = getRand}}{{macro bar}}{{f}}{{/macro}}{{return bar}}{{/macro}}{{var x = foo()}}{{x().isString()}}{{x().length()>=9}}",
        "expectedResult": "truetrue"
      },
      {
        "input": "{{macro foo(a)}}a = {{self->toJSON}}{{/macro}}xx{{foo(10).isString()}}{{foo().isString()}}",
        "expectedResult": "xxtruetrue"
      },
      {
        "input": "{{macro foo}}{{var f = getRand}}{{macro bar}}{{f}}{{/macro}}{{return bar + getRand}}{{/macro}}{{var x = foo()}}---{{x}}{{x}}{{x}}",
        "expectedResult": "---"
      },
      {
        "input": "---{{[ => 10 ][0]()}}",
        "expectedResult": "--- 10"
      },
      {
        "input": "{{var foo = => => 10 * 2}}--{{foo()()}}",
        "expectedResult": "---20"
      }
    ]
  }
]



